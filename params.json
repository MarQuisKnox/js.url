{"name":"JavaScript/NodeJS URL","tagline":"JavaScript/NodeJS URL it's an JavaScript class that parses an URL and convert it into a object with similar properties to object Location (window.location). Also included inverse process (object to URL string), and a lot of features that it will help you to modify a URL easily.  Compatible with browser JavaScript and NodeJS (https://npmjs.org/package/kurl).","body":"JavaScript/NodeJS URL v1.2.4\r\n==================================================\r\n\r\nWhat is this?\r\n--------------------------------------\r\n\r\nIt's an JavaScript class that parses an URL and convert it into a object with similar properties to object Location (window.location). Also included inverse process (object to URL string), and a lot of features that it will help you to modify a URL easily. \r\n\r\nCompatible with browser JavaScript and NodeJS (https://npmjs.org/package/kurl).\r\n\r\nDemo online\r\n--------------------------------------\r\n\r\nhttp://jsfiddle.net/yeikos/a2LdT/\r\n\r\nMore info\r\n--------------------------------------\r\n\r\nhttp://www.yeikos.com/2013/01/javascript-nodejs-url-parser.html\r\n\r\nChangelog\r\n--------------------------------------\r\n\r\n**v1.2.4 - 09/02/13**\r\n\r\n- Bug fix in Internet Explorer (dom elements).\r\n- Bug fix in `URL.unparam`.\r\n\r\n**v1.2.3 - 15/01/13**\r\n\r\n- Bug fix in `URL.normalize.pathname`: absolute path is converted to canonical.\r\n- Location argument now can be a URL instance.\r\n- Code more clean and lightweight.\r\n\r\n**v1.2.2 - 12/01/13**\r\n\r\n- Bug fix in `_prototypeSelect`: variable `size` was not declared.\r\n\r\n**v1.2.1 - 11/01/13**\r\n\r\n- Added to prototype: `instance`.\r\n- Constructor improved.\r\n- Bug fix in `_prototypeSelect`: `select`, `unselect`, `from`, `to`.\r\n- Bug fix in `URL.normalize.host`: it will be converted to lowercase.\r\n\r\n**v1.2.0 - 10/01/13**\r\n\r\n- Added to prototype: `unselect`.\r\n\r\n**v1.1.0 - 09/01/13**\r\n\r\n- Added to prototype: `isExternal`, `select`, `from`, `to`.\r\n- Renamed prototype methods: `query` to `search` and `queryHash` to `hash`.\r\n- URL argument now can be a DOM element.\r\n- Code more clean and lightweight.\r\n- Bug fix and optimizations.\r\n\r\nExample\r\n--------------------------------------\r\n\r\n\t<html>\r\n\r\n\t\t<head>\r\n\r\n\t\t\t<script type=\"text/javascript\" src=\"https://raw.github.com/yeikos/js.url/master/url.js\"></script>\r\n\r\n\t\t\t<script type=\"text/javascript\">\r\n\r\n\t\t\t\tvar url = URL('http://guest:secret@remote:21/filename?a=1#ok');\r\n\r\n\t\t\t\tconsole.log(\r\n\r\n\t\t\t\t\turl.attr() \r\n\r\n\t\t\t\t\t/*{ \r\n\r\n\t\t\t\t\t\tprotocol: 'http:',\r\n\t\t\t\t\t\tauth: 'guest:secret',\r\n\t\t\t\t\t\thost: 'remote:21',\r\n\t\t\t\t\t\thostname: 'remote',\r\n\t\t\t\t\t\tport: 21,\r\n\t\t\t\t\t\tpathname: '/filename',\r\n\t\t\t\t\t\tsearch: '?a=1',\r\n\t\t\t\t\t\thash: '#ok'\r\n\r\n\t\t\t\t\t}*/\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconsole.log(\r\n\r\n\t\t\t\t\turl.attr('hostname') \r\n\r\n\t\t\t\t\t// remote\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconsole.log(\r\n\r\n\t\t\t\t\turl.attr('hostname', 'localhost').href()\r\n\r\n\t\t\t\t\t// http://guest:secret@localhost:21/filename?a=1#ok\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconsole.log(\r\n\r\n\t\t\t\t\turl.attr('search'),\r\n\r\n\t\t\t\t\t// ?a=1\r\n\r\n\t\t\t\t\turl.search('b', 2).search(),\r\n\r\n\t\t\t\t\t// { a : 1, b : 2 }\r\n\r\n\t\t\t\t\turl.attr('search')\r\n\r\n\t\t\t\t\t// ?a=1&b=2\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconsole.log(\r\n\r\n\t\t\t\t\turl.hash({ a: 1 }).select('hostname', 'pathname', 'hash')\r\n\r\n\t\t\t\t\t// //localhost/filename#a=1\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconsole.log(\r\n\r\n\t\t\t\t\tURL('http://localhost', 'https://localhost').isExternal(),\r\n\r\n\t\t\t\t\t// true\r\n\r\n\t\t\t\t\tURL('/folder', 'https://localhost').isExternal()\r\n\r\n\t\t\t\t\t// false\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconsole.log(\r\n\r\n\t\t\t\t\tURL('subsection?a=1', 'http://localhost/section/').from('pathname')\r\n\r\n\t\t\t\t\t// /section/subsection?a=1\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t</script>\r\n\r\n\t\t</head>\r\n\r\n\t\t<body>See console log.</body>\r\n\r\n\t</html>\r\n\r\nAttributes\r\n--------------------------------------\r\n\r\nThe attributes names match with of Location Object Properties (http://www.w3schools.com/jsref/obj_location.asp), except `href` that it's ignored, and `auth` that it`s added.\r\n\r\nAttributes: `protocol`, `auth`, `host`, `hostname`, `port`, `pathname`, `search`, `hash`.\r\n\r\nAPI methods\r\n--------------------------------------\r\n\r\n### Constructor (URL)\r\n\r\n***\r\n\r\n**URL(url, location)**\r\n\r\n_url: string, attributes object or DOM element (optional)._\r\n\r\n_location: string, attributes object, DOM element or URL instance (optional)._\r\n\r\n> Creates a new instance with an URL in base to the location introduced.\r\n\r\nreturns instance.\r\n\r\n***\r\n\r\n### Local methods (URL.prototype)\r\n\r\n***\r\n\r\n**url.location**\r\n\r\n> It's a URL instance added automatically by the constructor, and his attributes are used internally to calculate the result in base to the location defined.\r\n\r\n***\r\n\r\n**url.href()**\r\n\r\n> Builds an URL string in base to current attributes values.\r\n\r\nreturns URL string.\r\n\r\n**url.href(url)**\r\n\r\n_url: string, attributes object or DOM element._\r\n\r\n> Sets a new URL that replaces all attributes.\r\n\r\nreturns instance.\r\n\r\n***\r\n\r\n**url.attr()**\r\n\r\n> Gets all attributes.\r\n\r\nreturns attributes object.\r\n\r\n**url.attr(name)**\r\n\r\n_name: attribute name (string)._\r\n\r\n> Gets value of the attribute.\r\n\r\nreturns string.\r\n\r\n**url.attr(object)**\r\n\r\n_object: attributes object._\r\n\r\n> Sets multiple values to the attributes.\r\n\r\nreturns instance.\r\n\r\n**url.attr(name, value)**\r\n\r\n_name: attribute name (string)._\r\n\r\n_value: attribute value._\r\n\r\n> Sets a new value to the attribute.\r\n\r\nreturns instance.\r\n\r\n***\r\n\r\n**url.search()**\r\n\r\n> Gets search attribute in object format.\r\n\r\nreturns object.\r\n\r\n**url.search(name)**\r\n\r\n_name: attribute name (string)._\r\n\r\n> Gets the value of component.\r\n\r\nreturns string.\r\n\r\n**url.search(object)**\r\n\r\n_object: compontents object._\r\n\r\n> Replaces all compontents by the object introduced.\r\n\r\nreturns instance.\r\n\r\n**url.search(name, value)**\r\n\r\n_name: compontent name (string)._\r\n\r\n_value: compontent value. If it's `null` the compontent will be delete._\r\n\r\n> Sets a new value to the compontent.\r\n\r\nreturns instance.\r\n\r\n***\r\n\r\n**url.hash()**\r\n\r\n> Gets hash attribute in object format.\r\n\r\nreturns object.\r\n\r\n**url.hash(name)**\r\n\r\n_name: attribute name (string)._\r\n\r\n> Gets the value of component.\r\n\r\nreturns string.\r\n\r\n**url.hash(object)**\r\n\r\n_object: compontents object._\r\n\r\n> Replaces all components by the object introduced.\r\n\r\nreturns instance.\r\n\r\n**url.hash(name, value)**\r\n\r\n_name: compontent name (string)._\r\n\r\n_value: compontent value. If it's `null` the compontent will be delete._\r\n\r\n> Sets a new value to the compontent.\r\n\r\nreturns instance.\r\n\r\n***\r\n\r\n**url.isExternal()**\r\n\r\n> Checks if the address is external in base to the location.\r\n\r\nreturns true or false (boolean).\r\n\r\n***\r\n\r\n**url.select(name, name, ...)**\r\n\r\n_name: attributes names (string)._\r\n\r\n> Builds an URL string using only selected attributes.\r\n\r\nreturns URL (string).\r\n\r\n***\r\n\r\n**url.unselect(name, name, ...)**\r\n\r\n_name: attributes names (string)._\r\n\r\n> Builds an URL string excluding selected attributes.\r\n\r\nreturns URL (string).\r\n\r\n***\r\n\r\n**url.from(name)**\r\n\r\n_name: attribute name (string)._\r\n\r\n> Builds an URL string starting from the selected attribute.\r\n\r\nreturns URL (string).\r\n\r\n***\r\n\r\n**url.to(name)**\r\n\r\n_name: attribute name (string)._\r\n\r\n> Builds an URL string starting from the beginning to the selected attribute.\r\n\r\nreturns URL (string).\r\n\r\n***\r\n\r\n### Global methods (URL)\r\n\r\n***\r\n\r\n**URL.instance(argv, callback)**\r\n\r\n_argv: array argument of the constructor (optional)._\r\n_callback: function whose context is the new instance (optional)._\r\n\r\n> Create a new URL instance with arguments, calling first to callback and finally to constructor.\r\n\r\nreturns instance.\r\n\r\n***\r\n\r\n**URL.getElementURL(element)**\r\n\r\n_element: element object (DOM Element)._\r\n\r\n> Gets element URL (form, a, base, link, img, script, iframe).\r\n\r\nreturns URL if found or empty string if not found (string).\r\n\r\n***\r\n\r\n**URL.build(url, location)**\r\n\r\n_url: string, attributes object or DOM element._\r\n\r\n_location: string, attributes object, DOM element or URL instance (optional)._\r\n\r\n> Builds a new URL based in attributes introduced and doing use location attributes.\r\n\r\nreturns URL (string).\r\n\r\n***\r\n\r\n**URL.unbuild(url, location)**\r\n\r\n_url: string, attributes object or DOM element._\r\n\r\n_location: string, attributes object, DOM element or URL instance (optional)._\r\n\r\n> Unbuilds URL to converting it into a attributes object and doing use location attributes.\r\n\r\nreturns attributes object.\r\n\r\n***\r\n\r\n**URL.param(query)**\r\n\r\n_query: query object._\r\n\r\n> Converts a object into query string.\r\n\r\nreturns query string.\r\n\r\n***\r\n\r\n**URL.unparam(query)**\r\n\r\n_query: query string._\r\n\r\n> Converts a query string into object.\r\n\r\nreturns query object.\r\n\r\n***","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}